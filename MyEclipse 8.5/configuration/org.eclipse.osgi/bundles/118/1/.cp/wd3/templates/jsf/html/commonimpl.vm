			<constructor>
				var eventHandler = function(event) {
					if (this.eventPropagationEnabled) {
						this.safeUpdate();
					} else {
						event.preventDefault();
						event.stopPropagation();
					}
				};
				this.addEventListener('DOMAttrModified', eventHandler, true);
				//this.addEventListener('DOMCharacterDataModified', eventHandler, true);
				//this.addEventListener('DOMNodeInserted', eventHandler, true);
				//this.addEventListener('DOMNodeRemoved', eventHandler, true);
				
				this.safeUpdate();
				
				var dragHandler = function (event) {
					event.preventDefault();
					event.stopPropagation();
				}
				//this.addEventListener('draggesture', dragHandler, true);
				this.addEventListener('dragover', dragHandler, true);
				this.addEventListener('dragenter', dragHandler, true);
				this.addEventListener('dragexit', dragHandler, true);
				this.addEventListener('dragdrop', dragHandler, true);
				this.addEventListener('drop', dragHandler, true);
			</constructor>
			
			<field name="eventPropagationEnabled">true</field>
			
			<method name="safeUpdate">
				<body><![CDATA[
					this.eventPropagationEnabled = false;
					this.update();
					this.eventPropagationEnabled = true;
				]]></body>
			</method>
			
			<method name="cloneAttributes">
				<parameter name="src"/>
				<parameter name="dest"/>
				<parameter name="attrlist"/>
				<body><![CDATA[
					if (attrlist != null) {
						for (i in attrlist) {
							var attr = src.getAttribute(attrlist[i]);
							if (attr != null) {
								dest.setAttribute(attrlist[i], src.getAttribute(attrlist[i]));
							}
						}
					}
				]]></body>
			</method>
